<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" ignored="0" total="10" passed="5">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="11121" started-at="2023-06-29T14:00:47Z" finished-at="2023-06-29T14:00:58Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="11121" started-at="2023-06-29T14:00:47Z" finished-at="2023-06-29T14:00:58Z">
      <class name="NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="setUp" is-config="true" duration-ms="4505" started-at="2023-06-29T19:30:47Z" finished-at="2023-06-29T19:30:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="testValidInputHour()[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testValidInputHour" duration-ms="1474" started-at="2023-06-29T19:30:51Z" finished-at="2023-06-29T19:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidInputHour -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="1" started-at="2023-06-29T19:30:53Z" finished-at="2023-06-29T19:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidInputHour status=SUCCESS method=NextBirthdayAPITest.testValidInputHour()[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testValidInputDay()[pri:1, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testValidInputDay" duration-ms="563" started-at="2023-06-29T19:30:53Z" finished-at="2023-06-29T19:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidInputDay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="1" started-at="2023-06-29T19:30:53Z" finished-at="2023-06-29T19:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidInputDay status=SUCCESS method=NextBirthdayAPITest.testValidInputDay()[pri:1, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testValidInputWeek()[pri:2, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testValidInputWeek" duration-ms="538" started-at="2023-06-29T19:30:53Z" finished-at="2023-06-29T19:30:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidInputWeek -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-06-29T19:30:54Z" finished-at="2023-06-29T19:30:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidInputWeek status=SUCCESS method=NextBirthdayAPITest.testValidInputWeek()[pri:2, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testValidInputMonth()[pri:3, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testValidInputMonth" duration-ms="575" started-at="2023-06-29T19:30:54Z" finished-at="2023-06-29T19:30:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidInputMonth -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="0" started-at="2023-06-29T19:30:55Z" finished-at="2023-06-29T19:30:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidInputMonth status=SUCCESS method=NextBirthdayAPITest.testValidInputMonth()[pri:3, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testMissingQueryParameters()[pri:4, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testMissingQueryParameters" duration-ms="664" started-at="2023-06-29T19:30:55Z" finished-at="2023-06-29T19:30:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest.testMissingQueryParameters(NextBirthdayAPITest.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMissingQueryParameters -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="164" started-at="2023-06-29T19:30:55Z" finished-at="2023-06-29T19:30:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testMissingQueryParameters status=FAILURE method=NextBirthdayAPITest.testMissingQueryParameters()[pri:4, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testInvalidDateFormat()[pri:5, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testInvalidDateFormat" duration-ms="268" started-at="2023-06-29T19:30:55Z" finished-at="2023-06-29T19:30:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest.testInvalidDateFormat(NextBirthdayAPITest.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidDateFormat -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="134" started-at="2023-06-29T19:30:56Z" finished-at="2023-06-29T19:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidDateFormat status=FAILURE method=NextBirthdayAPITest.testInvalidDateFormat()[pri:5, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testInvalidUnitValue()[pri:6, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testInvalidUnitValue" duration-ms="288" started-at="2023-06-29T19:30:56Z" finished-at="2023-06-29T19:30:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest.testInvalidUnitValue(NextBirthdayAPITest.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidUnitValue -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="113" started-at="2023-06-29T19:30:56Z" finished-at="2023-06-29T19:30:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testInvalidUnitValue status=FAILURE method=NextBirthdayAPITest.testInvalidUnitValue()[pri:6, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testFutureDateOfBirth()[pri:7, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testFutureDateOfBirth" duration-ms="284" started-at="2023-06-29T19:30:56Z" finished-at="2023-06-29T19:30:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest.testFutureDateOfBirth(NextBirthdayAPITest.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFutureDateOfBirth -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="121" started-at="2023-06-29T19:30:56Z" finished-at="2023-06-29T19:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testFutureDateOfBirth status=FAILURE method=NextBirthdayAPITest.testFutureDateOfBirth()[pri:7, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="testTodayDateOfBirth()[pri:8, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testTodayDateOfBirth" duration-ms="245" started-at="2023-06-29T19:30:57Z" finished-at="2023-06-29T19:30:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testTodayDateOfBirth -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="1" started-at="2023-06-29T19:30:57Z" finished-at="2023-06-29T19:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testTodayDateOfBirth status=SUCCESS method=NextBirthdayAPITest.testTodayDateOfBirth()[pri:8, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="testLeapYear()[pri:9, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="testLeapYear" duration-ms="260" started-at="2023-06-29T19:30:57Z" finished-at="2023-06-29T19:30:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertTrue(Assert.java:41)
	at org.testng.Assert.assertTrue(Assert.java:51)
	at NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest.testLeapYear(NextBirthdayAPITest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLeapYear -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="afterMethod" is-config="true" duration-ms="118" started-at="2023-06-29T19:30:57Z" finished-at="2023-06-29T19:30:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testLeapYear status=FAILURE method=NextBirthdayAPITest.testLeapYear()[pri:9, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest@42e26948]" name="tearDown" is-config="true" duration-ms="738" started-at="2023-06-29T19:30:57Z" finished-at="2023-06-29T19:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- NextBirthDayDatenew.NextBirthDayDatenew.NextBirthdayAPITest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
